<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>기술 블로그를 해야된다며? (1) 초기 준비</title>
      <link href="2021/04/07/blog01/"/>
      <url>2021/04/07/blog01/</url>
      
        <content type="html"><![CDATA[<h1 id="야너두-야나두"><a href="#야너두-야나두" class="headerlink" title="야너두? 야나두!"></a>야너두? 야나두!</h1><p>요즘 어지간히 컴퓨터 좀 두드린다 하는 사람들은 기술 블로그를 가지고 있는 것 같다. 이제는 가슴 속에 품고 다니는 이력서 같은 느낌. </p><p>그래서 나도 한다. </p><p>사실 이 생각을 한거는 1년 전쯤이고 만들어서 하기도 했었다. 이름도 지었다. 그 이름하야 ‘Knowledge Digest’. 내 지식의 요약본이라고 나름 의미도 붙였고 ‘다이제스트니까 위장 모양 마크도 만들어야지~’라면서 마크도 만들었지만 몇 달 학교에서 배운 것들 올리더니 졸업이 가까워 지니 아주 가볍게 내팽겨쳤었다. </p><img src="\img\image-20210406150009397.png" alt="image-20210406150009397" style="zoom:100%;" /><center><이전 블로그. 나름 미니멀을 추구한거 같은데 그냥 허전할 따름이다></center><p>이제와서 내 이력에 대한 조바심도 생기고 할 줄 아는 것도 없는 것 같아서 공부도 할 겸해서 블로그를 다시 시작할까~ 해서 들어가봤더니 이제보니</p><p><strong>너무 구리다.</strong></p><p>레이아웃도 구리지만 마크도 구리고 글 내용도 구리고 재미도 없다. 그리고 결정적으로 구조를 너무 지저분하게 해서 어디를 어디서 부터 건들여서 고칠까 감이 안잡힌다. 이걸 어쩌지. </p><p>RPG게임 하다가 망캐 되면 찝찝해서 다시 만들어서 처음부터 키우고,</p><p>청소를 하더라도 무조건 물건 다 들어내서 하는 나로서는 이 상태로 덕지덕지 고쳐서 쓰는건 용납이 안된다. </p><h1 id="다시-처음부터"><a href="#다시-처음부터" class="headerlink" title="다시 처음부터"></a>다시 처음부터</h1><p>이전 블로그는 Jekyll의 minimal-mistakes 테마를 사용해서 만들었었다…..라고 하기엔 내 나름 레이아웃들을 수정을 해서 이제 원형을 알아볼 수가 없다.  </p><p>쨌든. 이전에 Jekyll을 썼으니 다시 쓸려고 했지마는 만든지 너무 오래되어서 그게 뭐였는지 잘 기억이 나지가 않았다. 이게 뭐였지?</p><h2 id="Static-Website-Generator"><a href="#Static-Website-Generator" class="headerlink" title="Static Website Generator"></a>Static Website Generator</h2><p>직역하자면 ‘정적 웹사이트 생성기’. 간단하게 말하면 로컬 환경에서 생성기를 이용해서 html 파일을 생성하고, 그 만들어진 파일들만 서버로 보내서 웹사이트를 구현한다.  이미 만들어져있는 파일들을 서버에 올리기 때문에 ‘정적’인 것이다. 이게 있으면 서버 사이드에서 작업을 하거나 데이터베이스를 사용할 필요가 없이 리퀘스트 받은 html페이지만을 표시하면 되니 이보다 더 간편할 수가 없다. 수정이나 글 작성도 로컬에서 파일을 수정/작성해서 서버에 올리기만 하면 html 페이지로 생성되서 페이지가 수정/작성 된다. </p><h2 id="Jekyll-vs-Hugo-vs-Hexo"><a href="#Jekyll-vs-Hugo-vs-Hexo" class="headerlink" title="Jekyll vs Hugo vs  Hexo"></a>Jekyll vs Hugo vs  Hexo</h2><p>잘 쓰이는 static website generator로는 Jekyll, Hugo, Hexo 등등이 있다. </p><p><strong>Jekyll</strong>는 Ruby 기반의 static website generator로 여담이지만 GitHub의 공동 설립자가 만들었다고 한다. 그래서 그런지 GitHub Pages랑 사용하기엔 굉장히 최적화 되어있는면이 있다. 게다가 제일 많이 쓰이기도 하기에 GitHub에 <a href="https://github.com/topics/jekyll-theme">블로그 테마</a>도 다양하게 있다. </p><p><strong>Hugo</strong>는 Go로 작성되었다. Jekyll에 비하면 많이 대중적이지 않지마는 그래도 사용자가 늘어나는 추세에 있다. 광고로 ‘세계에서 제일 빠른 웹사이트 제작 프레임워크(The world’s fastest framework for building websites)’ 라고 하는 만큼 스피드에 중점을 두고 있다.</p><p><strong>Hexo</strong>는 Node.js 기반으로 빠르기도 하고 GitHub pages나 heroku를 통해서 배포를 할 때 하나의 커맨드 라인만으로 간단하게 배포가 된다. hexo도 물론 <a href="https://hexo.io/themes/">많은 테마들</a>을 제공한다. </p><h2 id="무엇을-고를까"><a href="#무엇을-고를까" class="headerlink" title="무엇을 고를까"></a>무엇을 고를까</h2><p>사실 이 중에 무엇을 고르든 구축에는 큰 문제가 없다. 초기 블로그 작업을 위한 가이드라인이 자세히 작성되어있고 포스트 작성법도 거의 전부 동일하다고 해도 된다. 그렇다면 여기서 고려할 것은 </p><ol><li>디자인</li><li>직접 레이아웃 커스터마이징이 가능할까</li></ol><p>정도이다. </p><p>사실 디자인은 개인 취향에 따라 많이 갈리겠지만 개인적으로 Jekyll 테마 중에는 마음에 드는 테마가 없었다. 제일 유명한 듯한 Minimal-mistakes가 깔끔하고 좋긴하지만 이건 너무 많이들 쓰는지라 샤이 힙스터인 나는 쓰기가 싫더라.  그렇게 테마를 찾아 헤메이고 있는데 눈에 쏙 들어온 테마가 하나 있었다. </p><img src="https://github.com/Haojen/hexo-theme-Claudia/raw/master/screenshot/claudia-cover-v2.png" alt="cover" style="zoom:100%;" /><center><출처 :     <a href="https://github.com/Haojen/hexo-theme-Claudia">https://github.com/Haojen/hexo-theme-Claudia</a>></center><p>이 Hexo 테마가 너무 마음에 쏙 들어서 다른 테마를 봐도 눈에 들지가 않아서 결국 장고 끝에 이 테마를 써야겠다고 결정했다. </p><p>그리고, 직접 레이아웃 커스터마이징이 가능할까 하는 문제는 이제 static website generator가 어떤 언어로 작성되었는지가 중요해지는데 Ruby, Go, Node.js 중에서 Ruby랑 Go는 정말 기본적인 문법조차 모르는 상태인지라 저걸 이용해서 레이아웃을 변경하기나 하는건 굉장히 번거롭겠다 싶었다. </p><p>그렇게 최종적으로 <strong>Hexo</strong>를 쓰기로 결정했다. </p><h1 id="블로그-준비"><a href="#블로그-준비" class="headerlink" title="블로그 준비"></a>블로그 준비</h1><h2 id="Git-설치"><a href="#Git-설치" class="headerlink" title="Git 설치"></a>Git 설치</h2><p>Git은 <a href="https://git-scm.com/downloads">웹사이트</a>에서 바로 OS에 맞게 설치하면 된다. 자세한 내용은 차후에 별도 포스팅을 할 예정. </p><h2 id="Node-js-설치"><a href="#Node-js-설치" class="headerlink" title="Node.js 설치"></a>Node.js 설치</h2><p>node.js도 마찬가지로 <a href="https://nodejs.org/en/">공식사이트</a>에서 OS에 맞게 설치하면 된다. 혹시나 본인의 PC에 node.js와 npm(node package manager)가 설치되어 있는지 알고싶다면 밑의 명령어로 확인할 수 있다. </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ node -v$ <span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>  <h2 id="Hexo-설치"><a href="#Hexo-설치" class="headerlink" title="Hexo 설치"></a>Hexo 설치</h2><p>npm을 이용해서 Hexo를 설치한다. </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  <h2 id="Hexo-시작하기"><a href="#Hexo-시작하기" class="headerlink" title="Hexo 시작하기"></a>Hexo 시작하기</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo init hexo_blog <span class="token comment">#hexo_blog라는 폴더를 생성하고 필요한 파일들을 설치한다</span>$ <span class="token builtin class-name">cd</span> hexo_blog$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token comment">#npm install 노드 모듈 설치 (정의된 의존성 모듈 설치)</span>$ hexo server <span class="token comment">#로컬에서 hexo 서버 실행</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>hexo server 명령어를 실행하면 <a href="http://localhost:4000/">http://localhost:4000</a>으로 접속하여 생성된 hexo 블로그를 확인할 수 있다. </p><img src="\img\image-20210406175118474.png" alt="image-20210406175118474" style="zoom:100%;" /><p>이 페이지에서 기본적인 포스트 작성방법등 기본적인 명령어를 알 수가 있다. </p><h2 id="테마-적용"><a href="#테마-적용" class="headerlink" title="테마 적용"></a>테마 적용</h2><p>테마는 우선 <a href="https://hexo.io/themes/">이 곳</a>에서 원하는 테마를 골라야한다. 나는 이 중에서 눈에 꽂힌 <a href="https://github.com/Haojen/hexo-theme-Claudia">claudia</a>를 선택했다. </p><p>테마를 적용하기 위해서는 블로그 root 폴더로 이동한 후 해당 테마를 theme 폴더 안에 clone 해주어야한다. </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> hexo_blog$ <span class="token function">git</span> clone https://github.com/Haojen/hexo-theme-Claudia themes/claudia<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>위 명령어를 입력하면 hexo 블로그 root 폴더 내의 theme 폴더안에 claudia라는 폴더가 생성된다. </p><p>그리고 블로그 root 폴더 내의 <code>_config.yml</code> 에서 Exthensions-theme을 landscape에서 claudia로 변경해준다. </p><p><img src="/img/image-20210406182837067.png" alt="image-20210406182837067"></p><p>마지막으로 변경사항들을 정적 파일로 생성하고 배포를 한다</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo clean <span class="token comment">#테마를 적용하기 위해서 캐시파일 및 생성된 파일들을 삭제</span>$ hexo generate <span class="token comment">#정적파일 생성</span>$ hexo deploy <span class="token comment">#배포</span><span class="token comment"># hexo g -d 생성 및 배포</span>$ hexo server -o <span class="token comment">#서버 실행과 동시에 창 열기</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>서버를 실행하게 되면</p><p><img src="/img/image-20210406183544626.png" alt="image-20210406183544626"></p><p>와 같이 테마가 적용된 블로그를 확인할 수 있다. </p><h1 id="마무리"><a href="#마무리" class="headerlink" title="마무리"></a>마무리</h1><p>여기까지 블로그를 생성하고 테마를 적용시켜서 내 맘에 쏙 드는 블로그를 만들 수가 있었다. </p><p>하지만 나만 볼려고 만드는 블로그가 아니기 때문에 이 녀석을 넓은 인터넷 세상으로 떠나보내주어야한다. </p><p>다음 포스팅에서는 GitHub Page를 이용해 호스팅 하는 방법에 대해서 알아보자.</p>]]></content>
      
      
      
        <tags>
            
            <tag> GitHub Page </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
